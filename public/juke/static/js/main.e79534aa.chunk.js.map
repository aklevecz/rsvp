{"version":3,"sources":["Modal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Modal","song","yes","no","createPortal","id","onClick","className","e","stopPropagation","name","document","getElementById","basicHeaders","b","Authorization","bearerHeaders","token","App","useState","artist","setArtist","artists","setArtists","setToken","listView","setListView","chosenSong","setChosenSong","currentlyPlaying","setCurrentlyPlaying","useEffect","code","window","location","search","replace","fetch","authBaseUrl","method","headers","body","URLSearchParams","grant_type","redirect_uri","then","r","json","console","log","refresh_token","d","access_token","apiBaseUrl","tracks","items","getCurrentTrack","useCallback","item","map","a","join","interval","setInterval","clearInterval","onKeyPress","key","value","onChange","target","track","uri","length","status","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e79534aa.chunk.js","sourcesContent":["import { createPortal } from \"react-dom\";\r\n\r\nexport default function Modal({\r\n  song,\r\n  yes,\r\n  no,\r\n}: {\r\n  song: any;\r\n  yes: () => void;\r\n  no: () => void;\r\n}) {\r\n  return createPortal(\r\n    <div id=\"modal\" onClick={no}>\r\n      <div className=\"modal__wrapper\" onClick={(e: any) => e.stopPropagation()}>\r\n        <div className=\"modal__song\">{song.name}</div>\r\n        <div className=\"button__container\">\r\n          <button onClick={yes} className=\"button--inverse\">\r\n            Yes\r\n          </button>\r\n          <button onClick={no} className=\"button--inverse\">\r\n            No\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.getElementById(\"modal-root\") as HTMLDivElement\r\n  );\r\n}\r\n","import { useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { apiBaseUrl, authBaseUrl, b, refresh_token } from \".\";\nimport Modal from \"./Modal\";\n\nconst dev = false;\n\nconst basicHeaders = (b: string) => ({\n  \"Content-Type\": \"application/x-www-form-urlencoded\",\n  Authorization: `Basic ${b}`,\n});\n\nconst bearerHeaders = (token: string) => ({\n  \"Content-Type\": \"application/json\",\n  Authorization: `Bearer ${token}`,\n});\n\nfunction App() {\n  const [artist, setArtist] = useState(\"\");\n  const [artists, setArtists] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [listView, setListView] = useState(false);\n  const [chosenSong, setChosenSong] = useState<any>(null);\n  const [currentlyPlaying, setCurrentlyPlaying] = useState<any>(null);\n\n  useEffect(() => {\n    const code = window.location.search.replace(\"?code=\", \"\");\n    if (code) {\n      fetch(authBaseUrl, {\n        method: \"POST\",\n        headers: basicHeaders(b),\n        body: new URLSearchParams({\n          grant_type: \"authorization_code\",\n          code,\n          redirect_uri: \"http://localhost:3000\",\n        }),\n      })\n        .then((r) => r.json())\n        .then(console.log);\n    }\n\n    fetch(authBaseUrl, {\n      method: \"POST\",\n      headers: basicHeaders(b),\n      body: new URLSearchParams({ grant_type: \"refresh_token\", refresh_token }),\n    })\n      .then((r) => r.json())\n      .then((d) => {\n        console.log(\"new token: \", d.access_token);\n        setToken(d.access_token);\n      });\n  }, []);\n\n  const handleChange = (e: any) => setArtist(e.target.value);\n  const toggleListView = () => setListView(!listView);\n\n  const clearView = () => {\n    setArtists([]);\n    setArtist(\"\");\n  };\n\n  const search = () => {\n    fetch(`${apiBaseUrl}/search?q=${artist}&type=track`, {\n      headers: bearerHeaders(token),\n    })\n      .then((r) => r.json())\n      .then((d) => {\n        setArtists(d.tracks.items);\n      });\n  };\n\n  const queueArtist = (uri: string) => {\n    fetch(`${apiBaseUrl}/me/player/queue?uri=${uri}`, {\n      method: \"POST\",\n      headers: bearerHeaders(token),\n    }).then((r) => {\n      console.log(r);\n      if (r.status === 204) {\n        alert(\"Success! :)\");\n      } else {\n        alert(\"Hm something went wrong :(\");\n      }\n      setChosenSong(null);\n    });\n  };\n\n  const getCurrentTrack = useCallback(() => {\n    fetch(`${apiBaseUrl}/me/player/currently-playing`, {\n      method: \"GET\",\n      headers: bearerHeaders(token),\n    })\n      .then((r) => r.json())\n      .then((d) => {\n        setCurrentlyPlaying(\n          `${d.item.name} - ${d.item.artists\n            .map((a: any) => a.name)\n            .join(\", \")}`\n        );\n      });\n  }, [token]);\n\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n    if (token) {\n      interval = setInterval(getCurrentTrack, 5000);\n    }\n    return () => clearInterval(interval);\n  }, [getCurrentTrack, token]);\n\n  const client_id = \"37647f33e70444dbb1c57863e099938d\";\n\n  return (\n    <div className=\"page\">\n      {dev && (\n        <a\n          href={`https://accounts.spotify.com/authorize?client_id=${client_id}&response_type=code&redirect_uri=http%3A%2F%2Flocalhost:3000&scope=user-modify-playback-state\n`}\n        >\n          connect\n        </a>\n      )}\n      {/* <div className=\"page__title\">{!listView && <div>{artist}</div>}</div> */}\n      <div className=\"currently-playing\">{currentlyPlaying}</div>\n      <div className=\"page__content\">\n        <div\n          className={`page__content__wrapper ${listView ? \"list-view\" : \"\"}`}\n        >\n          {!listView && (\n            <>\n              <div className=\"wrapper__item\">\n                <input\n                  onKeyPress={(e: any) => {\n                    if (e.key === \"Enter\") {\n                      search();\n                    }\n                  }}\n                  value={artist}\n                  onChange={handleChange}\n                ></input>\n              </div>\n              <div className=\"wrapper__item button__wrapper\">\n                <button onClick={search}>Search</button>\n              </div>\n            </>\n          )}\n\n          <div className={`list__container ${listView ? \"list-view\" : \"\"}`}>\n            <div className={`list__wrapper`}>\n              {artists.map((track: any) => (\n                <div key={track.uri} onClick={() => setChosenSong(track)}>\n                  {track.name} -{\" \"}\n                  {track.artists.map((a: any) => a.name).join(\", \")}\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>{\" \"}\n      {artists.length > 0 && (\n        <div>\n          <button className=\"button__list-view\" onClick={toggleListView}>\n            {listView ? \"Search\" : \"Expand\"}\n          </button>\n          <button className=\"button__clear-view\" onClick={clearView}>\n            {listView ? \"\" : \"Clear\"}\n          </button>\n        </div>\n      )}\n      {chosenSong && (\n        <Modal\n          yes={() => queueArtist(chosenSong.uri)}\n          no={() => setChosenSong(null)}\n          song={chosenSong}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./modal.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nexport const authBaseUrl = \"https://accounts.spotify.com/api/token\";\nexport const apiBaseUrl = \"https://api.spotify.com/v1\";\n\nexport const b =\n  \"Mzc2NDdmMzNlNzA0NDRkYmIxYzU3ODYzZTA5OTkzOGQ6YzQyZjhkODM4ZjE2NGQ5MTg5MmJhNzdkOWE3NTk1ZjE=\";\nexport const refresh_token =\n  \"AQDTXgX0MOIvQGRz6r50We2GfqlOSesolPscwsT2kfPfenRaZQ9x3xECyyPve4JNYeEAjVWvoHOvjca2NEmpEjJJgqFxgrBXyvp6c7JmQ0c18CR8EFS8B58jcgk0mEiwETw\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}